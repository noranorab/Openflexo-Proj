use org.openflexo.foundation.fml.rt.FMLRTModelSlot as FMLRT;
use org.openflexo.technologyadapter.xml.XMLModelSlot as XML;

import org.openflexo.foundation.fml.VirtualModel;
import org.openflexo.technologyadapter.xml.model.typed.XMLModel;
import org.openflexo.technologyadapter.xml.model.typed.XMLIndividual;
import org.openflexo.technologyadapter.xml.metamodel.XSDMetaModel;
import org.openflexo.technologyadapter.xml.metamodel.XMLComplexType;
import java.lang.String;

import XMLComplexType HEPTANE_CACHE_TYPE from [null:"HeptaneCacheType"];
import XMLComplexType CONFIGURATION from [null:"CONFIGURATION"];
import XMLComplexType ICACHE from [null:"icache"];
import XSDMetaModel HEPTANE_WCET from ["http://mem4csd.telecom-paris.fr/HeptaneWCET"];

model WCETWorkflow {

	public concept Cache {
		Integer h_nbsets  {
			Integer get() {
				return hCache.nbsets;
			}
			set(Integer value) {
				hCache.nbsets = value;
			}
		};
		Integer h_nbways  {
			Integer get() {
				return hCache.nbways;
			}
			set(Integer value) {
				hCache.nbways = value;
			}
		};
		Integer h_cachelinesize  {
			Integer get() {
				return hCache.cachelinesize;
			}
			set(Integer value) {
				hCache.cachelinesize = value;
			}
		};
		Integer h_latency  {
			Integer get() {
				return hCache.latency;
			}
			set(Integer value) {
				hCache.latency = value;
			}
		};
		Integer o_block_bits  {
			Integer get() {
				return iCache.blockBits;
			}
			set(Integer value) {
				iCache.blockBits = value;
			}
		};
		Integer o_way_bits  {
			Integer get() {
				return iCache.wayBits;
			}
			set(Integer value) {
				iCache.wayBits = value;
			}
		};
		Integer o_row_bits  {
			Integer get() {
				return iCache.rowBits;
			}
			set(Integer value) {
				iCache.rowBits = value;
			}
		};
		Integer o_miss_penalty  {
			Integer get() {
				return iCache.missPenalty;
			}
			set(Integer value) {
				iCache.missPenalty = value;
			}
		};
		public void syncHeptaneToOtawa() {
			o_block_bits = h_cachelinesize;
			o_way_bits = h_nbways;
			o_row_bits = h_nbsets;
			o_miss_penalty = h_latency;
		}
		public void syncOtawaToHeptane() {
			h_cachelinesize = o_block_bits;
			h_nbways = o_way_bits;
			h_nbsets = o_row_bits;
			h_latency = o_miss_penalty;
		}
		public Object setHeptaneField(String field, int value) {
			if (parameters.field == "nbsets") {
				h_nbsets = parameters.value;
				log "h_nbsets: " + parameters.value;
				return;
			}
			if (parameters.field == "nbways") {
				h_nbways = parameters.value;
				return;
			}
			if (parameters.field == "cachelinesize") {
				h_cachelinesize = parameters.value;
				return;
			}
			if (parameters.field == "latency") {
				h_latency = parameters.value;
				return;
			}
		}
		public Object setOtawaField(String field, int value) {
			if (parameters.field == "block_bits") {
				o_block_bits = parameters.value;
				return;
			}
			if (parameters.field == "way_bits") {
				o_way_bits = parameters.value;
				return;
			}
			if (parameters.field == "row_bits") {
				o_row_bits = parameters.value;
				return;
			}
			if (parameters.field == "miss_penalty") {
				o_miss_penalty = parameters.value;
				return;
			}
		}
		delete();
	}
}
